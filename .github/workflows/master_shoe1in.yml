# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - shoe1in

on: 
  push: 
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'shoe1in'  # Replace with the name of your Azure web app
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      #   # We add makemigrations and migrate to run our model/database migrations
      # - name: Make migrations and run migrations
      #   run: |
      #     python manage.py makemigrations --empty polls
      #     python manage.py migrate polls

        # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .
      
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: azure/docker-login@v1
        with:
          login-server: acrshoen.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: azure/docker-login@v1
        with:
          login-server: index.docker.io
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      - run: |
          docker build . -t acrshoen.azurecr.io/shoe1in:${{ github.sha }}
          docker push acrshoen.azurecr.io/shoe1in:${{ github.sha }}
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A23E8A68918047A79B8405609480D788 }}
          images: 'acrshoen.azurecr.io/shoe1in:${{ github.sha }}'
